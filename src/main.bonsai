<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:AindIsoForceDataSchema.Session;assembly=Extensions"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p2="clr-namespace:AindIsoForceDataSchema.Rig;assembly=Extensions"
                 xmlns:p3="clr-namespace:AindIsoForceDataSchema.TaskLogic;assembly=Extensions"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:p4="clr-namespace:AllenNeuralDynamics.WhiteRabbit;assembly=AllenNeuralDynamics.WhiteRabbit"
                 xmlns:p5="clr-namespace:AllenNeuralDynamics.AindManipulator;assembly=AllenNeuralDynamics.AindManipulator"
                 xmlns:beh="clr-namespace:Harp.Behavior;assembly=Harp.Behavior"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:p6="clr-namespace:OpenCV.Net;assembly=OpenCV.Net"
                 xmlns:p7="clr-namespace:AllenNeuralDynamics.Core;assembly=AllenNeuralDynamics.Core"
                 xmlns:spk="clr-namespace:Bonsai.Spinnaker;assembly=Bonsai.Spinnaker"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p8="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:p9="clr-namespace:AllenNeuralDynamics.VersionControl;assembly=AllenNeuralDynamics.VersionControl"
                 xmlns:p10="clr-namespace:System.Reactive;assembly=System.Reactive.Core"
                 xmlns:p11="clr-namespace:AllenNeuralDynamics.AindBehaviorServices.DataTypes;assembly=AllenNeuralDynamics.AindBehaviorServices"
                 xmlns:bv="clr-namespace:BonVision;assembly=BonVision"
                 xmlns:p12="clr-namespace:AllenNeuralDynamics.LicketySplit;assembly=AllenNeuralDynamics.LicketySplit"
                 xmlns:p13="clr-namespace:Harp.LoadCells;assembly=Harp.LoadCells"
                 xmlns:p14="clr-namespace:;assembly=Extensions"
                 xmlns:p15="clr-namespace:AllenNeuralDynamics.EnvironmentSensor;assembly=AllenNeuralDynamics.EnvironmentSensor"
                 xmlns:p16="clr-namespace:AllenNeuralDynamics.HarpUtils;assembly=AllenNeuralDynamics.HarpUtils"
                 xmlns:gui="clr-namespace:Bonsai.Gui;assembly=Bonsai.Gui"
                 xmlns:zg="clr-namespace:Bonsai.Gui.ZedGraph;assembly=Bonsai.Gui.ZedGraph"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:p17="clr-namespace:Bonsai.Vision.Design;assembly=Bonsai.Vision.Design"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="TaskLogicPath" />
        <Property Name="RigPath" />
        <Property Name="SessionPath" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:ReadSchemas.bonsai">
        <TaskLogicPath />
        <RigPath />
        <SessionPath />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>LoadSchemas</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawSessionSchema</Name>
            </Expression>
            <Expression xsi:type="p1:DeserializeFromJson">
              <p1:Type xsi:type="TypeMapping" TypeArguments="p1:AindBehaviorSessionModel" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawRigSchema</Name>
            </Expression>
            <Expression xsi:type="p2:DeserializeFromJson">
              <p2:Type xsi:type="TypeMapping" TypeArguments="p2:AindIsoForceRig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RigSchema</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RawTaskLogicSchema</Name>
            </Expression>
            <Expression xsi:type="p3:DeserializeFromJson">
              <p3:Type xsi:type="TypeMapping" TypeArguments="p3:AindIsoForceTaskLogic" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>TaskLogicSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>TaskParameters</Selector>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>TaskLogicParameters</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Annotation">
        <Text><![CDATA[]]></Text>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Hardware</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>HarpDevices</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpWhiteRabbitEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:FilterMessageType">
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType>Event</harp:MessageType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="p4:Parse">
                    <harp:Register xsi:type="p4:TimestampedCounter" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>HarpTimestampSource</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StartExperiment</Name>
                  </Expression>
                  <Expression xsi:type="Unit" />
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>TriggerHarpReadDump</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpLoadCellsDevice.bonsai" />
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpBehaviorDevice.bonsai">
                    <TriggerHarpReadDumpSubjectName>TriggerHarpReadDump</TriggerHarpReadDumpSubjectName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpLickometer.PortName</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="PortName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:HarpLicketySplitDevice.bonsai">
                    <PortName>COMx</PortName>
                    <TriggerHarpReadDumpSubjectName>TriggerHarpReadDump</TriggerHarpReadDumpSubjectName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpClockGenerator.PortName</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="PortName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:HarpWhiteRabbit.bonsai">
                    <PortName>COMx</PortName>
                    <TriggerHarpReadDumpSubjectName>TriggerHarpReadDump</TriggerHarpReadDumpSubjectName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Manipulator</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Calibration</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Input</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:SerializeToJson" />
                  </Expression>
                  <Expression xsi:type="p5:DeserializeFromJson">
                    <p5:Type xsi:type="TypeMapping" TypeArguments="p5:AindManipulatorCalibrationInput" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Manipulator</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>PortName</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="PortName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\AindManipulator.bonsai">
                    <PortName>COMx</PortName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpEnvironmentSensor.PortName</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="PortName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:HarpEnvironmentSensor.bonsai">
                    <PortName>COMx</PortName>
                    <TriggerHarpReadDumpSubjectName>TriggerHarpReadDump</TriggerHarpReadDumpSubjectName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpEnvironmentSensor</Selector>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:FilterNotNull.bonsai" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="28" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="28" Label="Source2" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="30" To="31" Label="Source1" />
                  <Edge From="31" To="32" Label="Source1" />
                  <Edge From="32" To="36" Label="Source1" />
                  <Edge From="33" To="34" Label="Source1" />
                  <Edge From="34" To="35" Label="Source1" />
                  <Edge From="35" To="36" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Cameras</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>TriggeredCameras</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>TriggeredCameraController</Selector>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>TriggeredCameraController</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>FrameRate.Value</Selector>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>CameraFrameRate</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CameraFrameRate</Name>
                        </Expression>
                        <Expression xsi:type="beh:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Register xsi:type="beh:Camera0Frequency" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpBehaviorEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:FilterMessageType">
                            <harp:FilterType>Include</harp:FilterType>
                            <harp:MessageType>Event</harp:MessageType>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="beh:Parse">
                          <harp:Register xsi:type="beh:TimestampedCamera0Frame" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Value</Selector>
                        </Expression>
                        <Expression xsi:type="BitwiseAnd">
                          <Operand xsi:type="WorkflowProperty" TypeArguments="beh:FrameAcquired">
                            <Value>FrameAcquired</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="WorkflowProperty" TypeArguments="sys:Byte">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2.Seconds</Selector>
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>FrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TriggeredCameraController</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Cameras</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="rx:CreateObservable">
                          <Name>InstantiateCamera</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Take">
                                  <rx:Count>1</rx:Count>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="rx:AsyncSubject">
                                <Name>ThisCamera</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="BooleanProperty">
                                  <Value>true</Value>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="MulticastSubject">
                                <Name>TriggeredCamerasInitialized</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Take">
                                  <rx:Count>1</rx:Count>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>ThisCamera</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Value</Selector>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="SerialNumber" Selector="SerialNumber" />
                                  <Property Name="ExposureTime" Selector="Exposure" />
                                  <Property Name="Gain" Selector="Gain" />
                                  <Property Name="Binning" Selector="Binning" />
                                  <Property Name="ColorProcessing" Selector="ColorProcessing" />
                                  <Property Name="Gamma" Selector="Gamma" />
                                  <Property Name="PixelFormat" Selector="PixelFormat" />
                                  <Property Name="AdcBitDepth" Selector="AdcBitDepth" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>ThisCamera</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Value</Selector>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>RegionOfInterest</Selector>
                              </Expression>
                              <Expression xsi:type="InputMapping">
                                <PropertyMappings>
                                  <Property Name="Value" Selector="X,Y,Width,Height" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="PropertySource" TypeArguments="cv:Crop,p6:Rect">
                                <MemberName>RegionOfInterest</MemberName>
                                <Value>
                                  <X>0</X>
                                  <Y>0</Y>
                                  <Width>0</Width>
                                  <Height>0</Height>
                                </Value>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="RegionOfInterest" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:AindSpinnakerCapture">
                                  <spk:Index xsi:nil="true" />
                                  <spk:ColorProcessing>Default</spk:ColorProcessing>
                                  <p7:ExposureTime>19000</p7:ExposureTime>
                                  <p7:Gain>0</p7:Gain>
                                  <p7:Binning>1</p7:Binning>
                                  <p7:Gamma xsi:nil="true" />
                                  <p7:PixelFormat>Mono8</p7:PixelFormat>
                                  <p7:RegionOfInterest>
                                    <p7:X>0</p7:X>
                                    <p7:Y>0</p7:Y>
                                    <p7:Width>0</p7:Width>
                                    <p7:Height>0</p7:Height>
                                  </p7:RegionOfInterest>
                                  <p7:AdcBitDepth xsi:nil="true" />
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>FrameEvent</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="harp:CreateTimestamped" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>ThisCamera</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Key</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="3" To="4" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="15" Label="Source1" />
                              <Edge From="6" To="7" Label="Source1" />
                              <Edge From="7" To="8" Label="Source1" />
                              <Edge From="8" To="15" Label="Source2" />
                              <Edge From="9" To="10" Label="Source1" />
                              <Edge From="10" To="11" Label="Source1" />
                              <Edge From="11" To="12" Label="Source1" />
                              <Edge From="12" To="13" Label="Source1" />
                              <Edge From="13" To="14" Label="Source1" />
                              <Edge From="14" To="15" Label="Source3" />
                              <Edge From="15" To="17" Label="Source1" />
                              <Edge From="16" To="17" Label="Source2" />
                              <Edge From="17" To="18" Label="Source1" />
                              <Edge From="18" To="21" Label="Source1" />
                              <Edge From="19" To="20" Label="Source1" />
                              <Edge From="20" To="21" Label="Source2" />
                              <Edge From="21" To="22" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Annotation">
                          <Name>SpinnakerApiNote</Name>
                          <Text><![CDATA[For some reason, if you try to access the spinnaker API back to back, a threading error is emitted]]></Text>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Timer">
                            <rx:DueTime>PT0S</rx:DueTime>
                            <rx:Period>PT0.1S</rx:Period>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="rx:GroupBy">
                          <rx:KeySelector>Item2</rx:KeySelector>
                          <rx:ElementSelector>Item1</rx:ElementSelector>
                        </Expression>
                        <Expression xsi:type="rx:ReplaySubject">
                          <Name>TriggeredCamerasStream</Name>
                          <rx:BufferSize xsi:nil="true" />
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
                          <rx:Name>TriggeredCamerasInitialized</rx:Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="IntProperty">
                            <Value>1</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:Accumulate" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TriggeredCameraController</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Cameras</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Count</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="GreaterThanOrEqual">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Delay">
                            <rx:DueTime>PT0.1S</rx:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject">
                          <Name>TriggeredCamerasReady</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="11" To="16" Label="Source2" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="25" Label="Source1" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="24" To="25" Label="Source2" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="29" Label="Source1" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="32" Label="Source1" />
                        <Edge From="32" To="37" Label="Source1" />
                        <Edge From="33" To="34" Label="Source1" />
                        <Edge From="34" To="35" Label="Source1" />
                        <Edge From="35" To="36" Label="Source1" />
                        <Edge From="36" To="37" Label="Source2" />
                        <Edge From="37" To="38" Label="Source1" />
                        <Edge From="38" To="39" Label="Source1" />
                        <Edge From="39" To="40" Label="Source1" />
                        <Edge From="40" To="41" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>SessionSettings</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>TaskLogicParameters</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>RngSeed</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p8:CreateContinuousUniform">
                <p8:Lower>0</p8:Lower>
                <p8:Upper>10</p8:Upper>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p8:Sample" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Name>CheckNull</scr:Name>
              <scr:Expression>Item1.HasValue ? Item1.Value : Item2</scr:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RngSeedValue</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Seed" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RngSeed</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p9:CreateRepository">
                <p9:Path>../.</p9:Path>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>Repository</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="RootFolder" Selector="RootPath" />
                <Property Name="SessionName" Selector="SessionName" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateRootLoggingPathFromSession.bonsai">
              <RootFolder />
              <SessionName xsi:nil="true" />
              <SubjectName>LoggingRootPath</SubjectName>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>CompoundRootPath</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="5" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Initialization</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p10:Unit">
              <rx:Name>StartExperiment</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p11:SoftwareEvent">
              <rx:Name>SoftwareEvents</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p11:SoftwareEvent">
              <rx:Name>UpdaterEvents</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p11:SoftwareEvent">
              <rx:Name>RuntimeLogging</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p10:Unit">
              <rx:Name>EndExperiment</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p10:Unit">
              <rx:Name>StartLogging</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:String">
              <rx:Name>Annotations</rx:Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>TrialNumber</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>EndExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>ExperimentState</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>TrialNumber</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p7:CreateSoftwareEvent">
                <p7:EventName>TrialNumber</p7:EventName>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>SoftwareEvents</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="17" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="17" Label="Source2" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source3" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>HardwareChecks</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\ProtocolValidation.bonsai" />
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>SkipHardwareValidation</Selector>
            </Expression>
            <Expression xsi:type="BitwiseNot" />
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DelaySubscription">
                <rx:DueTime>PT2S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="5" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>OperationControl</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>RewardControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>WaterValve</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Double">
                          <rx:Name>ValveOpenTimeMs</rx:Name>
                        </Expression>
                        <Expression xsi:type="beh:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Register xsi:type="beh:PulseSupplyPort0" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p10:Unit">
                          <rx:Name>TriggerValve</rx:Name>
                        </Expression>
                        <Expression xsi:type="beh:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="beh:CreateOutputSetPayload">
                            <beh:OutputSet>SupplyPort0</beh:OutputSet>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="bv:OptionalFloatProperty">
                      <bv:Value>0</bv:Value>
                      <bv:HasValue>true</bv:HasValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>HasValue</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>HasValue</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionCondition">
                    <scr:Name>!IsNaN</scr:Name>
                    <scr:Expression>!double.IsNaN(it)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>GreaterThan0</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Calibration.WaterValve</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Output</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>RewardToTime</scr:Name>
                    <scr:Expression>((Item1 * 0.001) - Item2.Offset) / Item2.Slope </scr:Expression>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>ToMilliseconds</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="Multiply">
                    <Operand xsi:type="DoubleProperty">
                      <Value>1000</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="InputMapping">
                    <PropertyMappings>
                      <Property Name="Value" Selector="it" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>GreaterThan0</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>ValveOpenTimeMs</Name>
                  </Expression>
                  <Expression xsi:type="Unit" />
                  <Expression xsi:type="MulticastSubject">
                    <Name>TriggerValve</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>HasValue</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>HasValue</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionCondition">
                    <scr:Name>!IsNaN</scr:Name>
                    <scr:Expression>!double.IsNaN(it)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>SessionAccumulatedReward</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p7:CreateSoftwareEvent">
                      <p7:EventName>GiveReward</p7:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>SoftwareEvents</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="12" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source2" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="15" Label="Source1" />
                  <Edge From="14" To="15" Label="Source2" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="27" Label="Source1" />
                  <Edge From="26" To="27" Label="Source2" />
                  <Edge From="27" To="28" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="30" To="31" Label="Source1" />
                  <Edge From="31" To="32" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>LickometerControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="p12:Parse">
                    <harp:Register xsi:type="p12:TimestampedLickState" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="HasFlag">
                    <Operand xsi:type="WorkflowProperty" TypeArguments="p12:LickChannels">
                      <Value>Channel0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:DistinctUntilChanged" />
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>LickEvent</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="6" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>CameraControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TriggeredCamerasReady</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Delay">
                      <rx:DueTime>PT2S</rx:DueTime>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>CameraState</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
                    <rx:Name>CameraState</rx:Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="beh:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="beh:CreateStartCamerasPayload">
                      <beh:StartCameras>CameraOutput0</beh:StartCameras>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="BitwiseNot" />
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="beh:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="beh:CreateStopCamerasPayload">
                      <beh:StopCameras>CameraOutput0</beh:StopCameras>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StartLogging</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>false</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>CameraState</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StartExperiment</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>CameraState</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>EndExperiment</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>false</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>CameraState</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="3" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="8" To="11" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="14" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source2" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>LoadCells</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLoadCellsEvents</Name>
                  </Expression>
                  <Expression xsi:type="p13:FilterRegister">
                    <harp:FilterType>Include</harp:FilterType>
                    <harp:Register xsi:type="p13:LoadCellData" />
                  </Expression>
                  <Expression xsi:type="harp:Parse">
                    <harp:Register xsi:type="harp:ParseMessagePayload">
                      <harp:PayloadType>TimestampedS16</harp:PayloadType>
                      <harp:IsArray>true</harp:IsArray>
                    </harp:Register>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>RawLoadCellData</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LoadCellsCalibration</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Calibration" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p14:ApplyLoadCellsCalibration" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>CalibratedLoadCellData</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicParameters</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>OperationControl</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Force</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>ForceOperationControl</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>ForceOperationControl</Name>
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>ParseForce</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>settings</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CalibratedLoadCellData</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>settings</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="ForceOperationControl" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p14:ParseForce">
                            <p14:ForceOperationControl />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="6" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Switch" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>CurrentForce</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="6" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source2" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:Defer">
        <Name>TaskLogic</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>TaskLogicParameters</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Environment.BlockStatistics</Selector>
            </Expression>
            <Expression xsi:type="Index">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="p3:MatchBlockStatistics">
              <p3:Type xsi:type="TypeMapping" TypeArguments="p3:BlockGenerator" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>TrialTemplate</Selector>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>thisTrial</Name>
            </Expression>
            <Expression xsi:type="Unit" />
            <Expression xsi:type="rx:SelectMany">
              <Name>QuiescentPeriod</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>thisTrial</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>QuiescencePeriod</Selector>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\CreateSoftwareEventInline.bonsai">
                    <EventName>QuiescentPeriod</EventName>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>thisPeriod</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CurrentForce</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>thisPeriod</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>ForceThreshold</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Threshold" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p14:ThresholdJoystick" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value.Left,Value.Right,Value.Push,Value.Pull</Selector>
                  </Expression>
                  <Expression xsi:type="BitwiseOr" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="8" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="rx:Defer">
        <Name>Logging</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:Defer">
              <Name>Behavior</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Modality" />
                  </Expression>
                  <Expression xsi:type="PropertySource" TypeArguments="p7:AppendModalitySuffix,sys:Nullable(p7:Modality)">
                    <MemberName>Modality</MemberName>
                    <Value>Behavior</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>Modality</Name>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>HarpLogging</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpBehaviorEvents</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="beh:GetDeviceMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>Behavior</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpLoadCellsEvents</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p13:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>LoadCells</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpLickometerEvents</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p12:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>Lickometer</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpWhiteRabbitEvents</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p4:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>ClockGenerator</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>StepperDriverEvents</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata>%YAML 1.1
---
# yaml-language-server: $schema=https://harp-tech.org/draft-02/schema/device.json
device: StepperDriver
whoAmI: 1130
firmwareVersion: "0.7"
hardwareTargets: "1.0"
registers:
  ##################################
  # Enable and disable
  ##################################
  EnableDriver:
    address: 32
    type: U8
    access: Write
    maskType: StepperMotors
    description: Enables the driver for a specific motor. If the driver is already enabled, the driver remains enabled.
  DisableDriver:
    address: 33
    type: U8
    access: Write
    maskType: StepperMotors
    description: Disables the driver for a specific stepper motor, which prevents current from being sent to the motor or load. If the driver is already disabled, the driver remains disabled.
  EnableEncoders:
    address: 34
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Specifies a set of port quadrature counters to enable in the device.
  DisableEncoders:
    address: 35
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Specifies a set of port quadrature counters to disable in the device.
  EnableDigitalInputs:
    address: 36
    type: U8
    access: Write
    maskType: DigitalInputs
    description: Specifies a set of digital inputs to enable in the device.
  DisableDigitalInputs:
    address: 37
    type: U8
    access: Write
    maskType: DigitalInputs
    description: Specifies a set of digital inputs to disable in the device.

  ##################################
  # Configuration
  ##################################
  Motor0OperationMode: &amp;opmode
    address: 38
    type: U8
    access: Write
    maskType: MotorOperationMode
    description: Configures the operation mode for motor 0.
  Motor1OperationMode:
    &lt;&lt;: *opmode
    address: 39
    description: Configures the operation mode for motor 1.
  Motor2OperationMode:
    &lt;&lt;: *opmode
    address: 40
    description: Configures the operation mode for motor 2.
  Motor3OperationMode:
    &lt;&lt;: *opmode
    address: 41
    description: Configures the operation mode for motor 3.
  Motor0MicrostepResolution: &amp;microstep_resolution
    address: 42
    type: U8
    access: Write
    maskType: MicrostepResolution
    description: Configures the microstep resolution for motor 0.
  Motor1MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 43
    description: Configures the microstep resolution for motor 1.
  Motor2MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 44
    description: Configures the microstep resolution for motor 2.
  Motor3MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 45
    description: Configures the microstep resolution for motor 3.

  Motor0MaximumRunCurrent: &amp;maxcurrent
    address: 46
    minValue: 0.139
    maxValue: 2.1
    defaultValue: 0.2
    type: Float
    access: Write
    description: Configures the maximum run RMS current per phase for motor 0.
  Motor1MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 47
    description: Configures the maximum run RMS current per phase for motor 1.
  Motor2MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 48
    description: Configures the maximum run RMS current per phase for motor 2.
  Motor3MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 49
    description: Configures the maximum run RMS current per phase for motor 3.

  Motor0HoldCurrentReduction: &amp;currentreduction
    address: 50
    type: U8
    access: Write
    maskType: HoldCurrentReduction
    description: Configures the hold current reduction for motor 0.
  Motor1HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 51
    description: Configures the hold current reduction for motor 1.
  Motor2HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 52
    description: Configures the hold current reduction for motor 2.
  Motor3HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 53
    description: Configures the hold current reduction for motor 3.

  Motor0StepInterval: &amp;nominalinterval
    address: 54
    minValue: 100
    maxValue: 20000
    defaultValue: 250
    type: U16
    access: Write
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 0.
  Motor1StepInterval:
    &lt;&lt;: *nominalinterval
    address: 55
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 1.
  Motor2StepInterval:
    &lt;&lt;: *nominalinterval
    address: 56
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 2.
  Motor3StepInterval:
    &lt;&lt;: *nominalinterval
    address: 57
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 3.

  Motor0MaximumStepInterval: &amp;maxinterval
    address: 58
    minValue: 100
    maxValue: 20000
    defaultValue: 2000
    type: U16
    access: Write
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 0.
  Motor1MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 59
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 1.
  Motor2MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 60
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 2.
  Motor3MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 61
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 3.

  Motor0StepAccelerationInterval: &amp;accperiod
    address: 62
    minValue: 2
    maxValue: 2000
    defaultValue: 10
    type: U16
    access: Write
    description: Configures the acceleration for motor 0. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor1StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 63
    description: Configures the acceleration for motor 1. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor2StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 64
    description: Configures the acceleration for motor 2. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor3StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 65
    description: Configures the acceleration for motor 3. The time between step pulses is decreased by this value when accelerating and increased when decelerating.

  EncoderMode:
    address: 66
    type: U8
    access: Write
    maskType: EncoderModeConfig
    description: Configures the operation mode of the quadrature encoder.
  EncoderSamplingRate:
    address: 67
    type: U8
    access: Write
    maskType: EncoderSamplingRateConfig
    description: Configures the sampling rate of the quadrature encoder event.

  Input0OpMode: &amp;input_mode
    address: 68
    type: U8
    access: Write
    maskType: InputOpModeConfig
    description: Configures the operation mode for digital input 0.
  Input1OpMode:
    &lt;&lt;: *input_mode
    address: 69
    description: Configures the operation mode for digital input 1.
  Input2OpMode:
    &lt;&lt;: *input_mode
    address: 70
    description: Configures the operation mode for digital input 2.
  Input3OpMode:
    &lt;&lt;: *input_mode
    address: 71
    description: Configures the operation mode for digital input 3.

  InterlockEnabled:
    address: 72
    type: U8
    access: Write
    maskType: InterlockEnabledConfig
    description: Configures the external interlock connector state required for the device to be enabled.

  AccumulatedStepsSamplingRate:
    address: 73
    type: U8
    access: Write
    maskType: AccumulatedStepsSamplingRateConfig
    description: Configures the dispatch rate of the accumulated steps event.

  ##################################
  # Events
  ##################################
  MotorStopped:
    address: 74
    type: U8
    access: Event
    description: Emitted when any of the motors stops.
    payloadSpec:
      State:
        description: Specifies which motors are currently stopped.
        maskType: StepperMotors
        mask: 0x0F
      Changed:
        description: Specifies which motor just stopped.
        maskType: StepperMotors
        mask: 0xF0
  MotorOverVoltageDetection:
    address: 75
    type: U8
    access: Event
    maskType: StepperMotors
    description: Contains a bit mask specifying the motor where the over voltage detection and protection mechanism occurred, which can happen when the there's a quick deceleration from a high velocity or when the motor stalls (not implemented).
  MotorRaisedError:
    address: 76
    type: U8
    access: Event
    maskType: StepperMotors
    description: Contains a bit mask specifying the motor that triggered the error which can be happen in case of short-circuit or driver temperature above 165 degrees celsius.

  Encoders:
    address: 77
    type: S16
    length: 3
    access: [Event, Write]
    description: Contains the quadrature encoder readings.
    payloadSpec:
      Encoder0:
        offset: 0
        description: The quadrature counter on port ENC 0.
      Encoder1:
        offset: 1
        description: The quadrature counter on port ENC 1.
      Encoder2:
        offset: 2
        description: The quadrature counter on port ENC 2.

  DigitalInputState:
    address: 78
    access: Event
    type: U8
    maskType: DigitalInputStates
    description: Reflects the state of the digital input lines.

  DeviceState:
    address: 79
    type: U8
    access: Event
    maskType: DeviceStateMode
    description: Contains the state of the device.

  ##################################
  # Movement control
  ##################################

  MoveRelative:
    address: 80
    type: S32
    length: 4
    access: Write
    description: Moves all motors by the number of steps written in this array register and set the direction according to the value's signal. If a motor is disable, the user should set the value to 0.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the number of steps used to move motor 0.
      Motor1:
        offset: 1
        description: Contains the number of steps used to move motor 1.
      Motor2:
        offset: 2
        description: Contains the number of steps used to move motor 2.
      Motor3:
        offset: 3
        description: Contains the number of steps used to move motor 3.

  Motor0MoveRelative: &amp;motorsteps
    address: 81
    type: S32
    access: Write
    description: Moves motor 0 by the number of steps written in this register and set the direction according to the value's signal.
  Motor1MoveRelative:
    &lt;&lt;: *motorsteps
    address: 82
    description: Moves motor 1 by the number of steps written in this register and set the direction according to the value's signal.
  Motor2MoveRelative:
    &lt;&lt;: *motorsteps
    address: 83
    description: Moves motor 2 by the number of steps written in this register and set the direction according to the value's signal.
  Motor3MoveRelative:
    &lt;&lt;: *motorsteps
    address: 84
    description: Moves motor 3 by the number of steps written in this register and set the direction according to the value's signal.

  MoveAbsolute:
    address: 85
    type: S32
    length: 4
    access: Write
    description: Moves all motors to the absolute position written in this array register. If a motor is disable, the user should set the value to 0.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the absolute position to move motor 0.
      Motor1:
        offset: 1
        description: Contains the absolute position to move motor 1.
      Motor2:
        offset: 2
        description: Contains the absolute position to move motor 2.
      Motor3:
        offset: 3
        description: Contains the absolute position to move motor 3.

  Motor0MoveAbsolute: &amp;motorabsolutesteps
    address: 86
    type: S32
    access: Write
    description: Moves motor 0 to the absolute position written in this register.
  Motor1MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 87
    description: Moves motor 1 to the absolute position written in this register.
  Motor2MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 88
    description: Moves motor 2 to the absolute position written in this register.
  Motor3MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 89
    description: Moves motor 3 to the absolute position written in this register.

  AccumulatedSteps:
    address: 90
    type: S32
    length: 4
    access: [Event, Write]
    description: Contains the accumulated steps of all motors. Write a value to set the accumulated steps. An event will be emitted with a dispatch rate defined in AccumulatedStepsSamplingRate.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the accumulated steps of motor 0.
      Motor1:
        offset: 1
        description: Contains the accumulated steps of motor 1.
      Motor2:
        offset: 2
        description: Contains the accumulated steps of motor 2.
      Motor3:
        offset: 3
        description: Contains the accumulated steps of motor 3.

  Mortor0AccumulatedSteps: &amp;motorsaccumulatedsteps
    address: 91
    type: S32
    access: Write
    description: Contains the accumulated number of steps of motor 0. Write a value to set the current number of accumulated steps.
  Mortor1AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 92
    description: Contains the accumulated number of steps of motor 1. Write a value to set the current number of accumulated steps.
  Mortor2AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 93
    description: Contains the accumulated number of steps of motor 2. Write a value to set the current number of accumulated steps.
  Mortor3AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 94
    description: Contains the accumulated number of steps of motor 3. Write a value to set the current number of accumulated steps.

  MaxPosition:
    address: 95
    type: S32
    length: 4
    access: Write
    description: Defines the limit of the accumulated steps for the positive movement of all motors. The device will not let the motors move further than this value. A value equal to 0 will disable the limits.
    payloadSpec:
      Motor0:
        offset: 0
        description: Defines the limit of the accumulated steps for the positive movement of motor 0. The device will not let the motor move further than this value.
      Motor1:
        offset: 1
        description: Defines the limit of the accumulated steps for the positive movement of motor 1. The device will not let the motor move further than this value.
      Motor2:
        offset: 2
        description: Defines the limit of the accumulated steps for the positive movement of motor 2. The device will not let the motor move further than this value.
      Motor3:
        offset: 3
        description: Defines the limit of the accumulated steps for the positive movement of motor 3. The device will not let the motor move further than this value.

  Motor0MaxPosition: &amp;motorsmaxsteps
    address: 96
    type: S32
    access: Write
    description: Specifies the limit of the accumulated steps for the positive movement of motor 0. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor1MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 97
    description: Specifies the limit of the accumulated steps for the positive movement of motor 1. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor2MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 98
    description: Specifies the limit of the accumulated steps for the positive movement of motor 2. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor3MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 99
    description: Specifies the limit of the accumulated steps for the positive movement of motor 3. The device will not let the motor move further than this value. A value equal to 0 disables the feature.

  MinPosition:
    address: 100
    type: S32
    length: 4
    access: Write
    description: Defines the limit of the accumulated steps for the negative movement of all motors. The device will not let the motors move further than this value. A value equal to 0 will disable the limits.
    payloadSpec:
      Motor0:
        offset: 0
        description: Defines the limit of the accumulated steps for the negative movement of motor 0. The device will not let the motor move further than this value.
      Motor1:
        offset: 1
        description: Defines the limit of the accumulated steps for the negative movement of motor 1. The device will not let the motor move further than this value.
      Motor2:
        offset: 2
        description: Defines the limit of the accumulated steps for the negative movement of motor 2. The device will not let the motor move further than this value.
      Motor3:
        offset: 3
        description: Defines the limit of the accumulated steps for the negative movement of motor 3. The device will not let the motor move further than this value.

  Motor0MinPosition: &amp;motorsminsteps
    address: 101
    type: S32
    access: Write
    description: Specifies the limit of the accumulated steps for the negative movement of motor 0. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor1MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 102
    description: Specifies the limit of the accumulated steps for the negative movement of motor 1. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor2MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 103
    description: Specifies the limit of the accumulated steps for the negative movement of motor 2. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor3MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 104
    description: Specifies the limit of the accumulated steps for the negative movement of motor 3. The device will not let the motor move further than this value. A value equal to 0 disables the feature.

  StepRelative:
    address: 105
    type: S32
    length: 4
    access: Write
    description: Starts the movement of all motors with the step interval defined by this array. The value's signal defines the direction.
    payloadSpec:
      Motor0:
        offset: 0
        description: Starts the movement of motor 0 with the step interval defined by this register. The value's signal defines the direction.
      Motor1:
        offset: 1
        description: Starts the movement of motor 1 with the step interval defined by this register. The value's signal defines the direction.
      Motor2:
        offset: 2
        description: Starts the movement of motor 2 with the step interval defined by this register. The value's signal defines the direction.
      Motor3:
        offset: 3
        description: Starts the movement of motor 3 with the step interval defined by this register. The value's signal defines the direction.

  Motor0StepRelative: &amp;immediatesteps
    address: 106
    type: S32
    access: Write
    description: Starts the movement of motor 0 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor1StepRelative:
    &lt;&lt;: *immediatesteps
    address: 107
    description: Starts the movement of motor 1 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor2StepRelative:
    &lt;&lt;: *immediatesteps
    address: 108
    description: Starts the movement of motor 2 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor3StepRelative:
    &lt;&lt;: *immediatesteps
    address: 109
    description: Starts the movement of motor 3 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.

  ##################################
  # Actions
  ##################################
  StopMotors:
    address: 110
    type: U8
    access: Write
    maskType: StepperMotors
    description: Stops the motors selected in the bit-mask immediately.
  ResetMotors:
    address: 111
    type: U8
    access: Write
    visibility: private
    maskType: StepperMotors
    description: Resets the internal motor driver which also clears any eventual error (not implemented).
  ResetEncoders:
    address: 112
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Resets the encoder.

  ##################################
  # Reserved
  ##################################
  Reserved0: &amp;reserved
    address: 113
    type: U8
    access: Write
    visibility: private
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 0.
  Reserved1:
    &lt;&lt;: *reserved
    address: 114
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 1.
  Reserved2:
    &lt;&lt;: *reserved
    address: 115
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 2.
  Reserved3:
    &lt;&lt;: *reserved
    address: 116
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 3.
  Reserved4:
    &lt;&lt;: *reserved
    address: 117
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 0.
  Reserved5:
    &lt;&lt;: *reserved
    address: 118
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 1.
  Reserved6:
    &lt;&lt;: *reserved
    address: 119
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 2.
  Reserved7:
    &lt;&lt;: *reserved
    address: 120
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 3.

  ##################################
  # Reserved block
  ##################################
  Reserved8: &amp;reserved_unused
    address: 121
    visibility: private
    type: U8
    access: Read
    description: Reserved register.
  Reserved9:
    &lt;&lt;: *reserved_unused
    address: 122
  Reserved10:
    &lt;&lt;: *reserved_unused
    address: 123
  Reserved11:
    &lt;&lt;: *reserved_unused
    address: 124
  Reserved12:
    &lt;&lt;: *reserved_unused
    address: 125
  Reserved13:
    &lt;&lt;: *reserved_unused
    address: 126
  Reserved14:
    &lt;&lt;: *reserved_unused
    address: 127
  Reserved15:
    &lt;&lt;: *reserved_unused
    address: 128
  Reserved16:
    &lt;&lt;: *reserved_unused
    address: 129

  ##################################
  # Quick movement
  ##################################
  TriggerQuickMovement:
    address: 130
    type: U8
    access: Write
    maskType: StepperMotors
    description: Triggers the quick movement in the correspondent motor with the currently configured settings.
  Motor1QuickMovementPulseDistance: &amp;quickmovement_pulsedistance
    address: 131
    type: Float
    access: Write
    description: Sets the single pulse distance for a quick movement, in millimeters, for the Motor 1.
  Motor2QuickMovementPulseDistance:
    &lt;&lt;: *quickmovement_pulsedistance
    address: 132
    description: Sets the single pulse distance for a quick movement, in millimeters, for the Motor 2.
  Motor1QuickMovementNominalSpeed: &amp;quickmovement_nominalspeed
    address: 133
    type: Float
    access: Write
    description: Sets the target speed for a quick movement, in millimeters per second, for the Motor 1.
  Motor2QuickMovementNominalSpeed:
    &lt;&lt;: *quickmovement_nominalspeed
    address: 134
    description: Sets the target speed for a quick movement, in millimeters per second, for the Motor 2.
  Motor1QuickMovementInitialSpeed: &amp;quickmovement_initialspeed
    address: 135
    type: Float
    access: Write
    description: Sets the initial speed for a quick movement, in millimeters per second, for the Motor 1.
  Motor2QuickMovementInitialSpeed:
    &lt;&lt;: *quickmovement_initialspeed
    address: 136
    description: Sets the initial speed for a quick movement, in millimeters per second, for the Motor 2.
  Motor1QuickMovementAcceleration: &amp;quickmovement_acceleration
    address: 137
    type: Float
    access: Write
    description: Sets the acceleration for a quick movement, in millimeters per second^2, for the Motor 1.
  Motor2QuickMovementAcceleration:
    &lt;&lt;: *quickmovement_acceleration
    address: 138
    description: Sets the acceleration for a quick movement, in millimeters per second^2, for the Motor 2.
  Motor1QuickMovementDistance: &amp;quickmovement_distance
    address: 139
    type: Float
    access: Write
    description: Sets the travel distance of a quick movement, in millimeters, for the Motor 1.
  Motor2QuickMovementDistance:
    &lt;&lt;: *quickmovement_distance
    address: 140
    description: Sets the travel distance of a quick movement, in millimeters, for the Motor 1.

##################################
# Bit masks
##################################
bitMasks:
  StepperMotors:
    description: Specifies the index of each motor.
    bits:
      Motor0: 0x01
      Motor1: 0x02
      Motor2: 0x04
      Motor3: 0x08
  QuadratureEncoders:
    description: Specifies the index of each motor.
    bits:
      Encoder0: 0x01
      Encoder1: 0x02
      Encoder2: 0x04
  DigitalInputs:
    description: Specifies the available digital input lines.
    bits:
      Input0: 0x1
      Input1: 0x2
      Input2: 0x4
      Input3: 0x8
  DigitalInputStates:
    description: Specifies the state of the port and digital input line that changed.
    bits:
      Input0: 0x1
      Input1: 0x2
      Input2: 0x4
      Input3: 0x8
      Input0Changed: 0x10
      Input1Changed: 0x20
      Input2Changed: 0x40
      Input3Changed: 0x80
##################################
# Group masks
##################################
groupMasks:
  EncoderModeConfig:
    description: Specifies the type of reading made from the quadrature QuadratureEncoders.
    values:
      Position: 0
      Displacement: 1
  EncoderSamplingRateConfig:
    description: Specifies the rate of the events from the quadrature QuadratureEncoders.
    values:
      Rate100Hz: 0
      Rate200Hz: 1
      Rate250Hz: 2
      Rate500Hz: 3
  MotorOperationMode:
    description: Specifies the motor operation mode.
    values:
      QuietMode: 0
      DynamicMovements: 1
  MicrostepResolution:
    description: Specifies the microstep resolution for each step pulse.
    values:
      Microstep8: 0
      Microstep16: 1
      Microstep32: 2
      Microstep64: 3
  HoldCurrentReduction:
    description: Specifies the hold current reduction.
    values:
      ReductionTo50Percent: 0
      ReductionTo25Percent: 1
      ReductionTo12Percent: 2
      NoReduction: 3
  InputOpModeConfig:
    description: Specifies the inputs operation mode.
    values:
      EventOnly: 0x0
      StopMotor0OnRising: 0x10
      StopMotor1OnRising: 0x11
      StopMotor2OnRising: 0x12
      StopMotor3OnRising: 0x13
      StopMotor0OnFalling: 0x20
      StopMotor1OnFalling: 0x21
      StopMotor2OnFalling: 0x22
      StopMotor3OnFalling: 0x23
  TriggerConfig:
    description: Specifies the input trigger configuration.
    values:
      FallingEdge: 0
      RisingEdge: 1
  InterlockEnabledConfig:
    description: Specifies the external connector state that enables the device.
    values:
      Closed: 0
      Open: 1
  AccumulatedStepsSamplingRateConfig:
    description: Specifies the rate of the accumulated steps events.
    values:
      Disabled: 0
      Rate10Hz: 1
      Rate50Hz: 2
      Rate100Hz: 3
  DeviceStateMode:
    description: Specifies the current state of the device.
    values:
      Disabled: 0
      Enabled: 1</DeviceMetadata>
                          <Modality>Behavior</Modality>
                          <DeviceName>StepperDriver</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpEnvironmentSensorEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p15:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>EnvironmentSensor</DeviceName>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="5" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="5" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source3" />
                        <Edge From="6" To="11" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="11" Label="Source2" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source3" />
                        <Edge From="12" To="17" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="17" Label="Source2" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source3" />
                        <Edge From="18" To="23" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="23" Label="Source2" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source3" />
                        <Edge From="24" To="27" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source2" />
                        <Edge From="28" To="33" Label="Source1" />
                        <Edge From="29" To="30" Label="Source1" />
                        <Edge From="30" To="33" Label="Source2" />
                        <Edge From="31" To="32" Label="Source1" />
                        <Edge From="32" To="33" Label="Source3" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>HarpCommandsLogging</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="harp:Parse">
                            <harp:Register xsi:type="harp:ParseMessagePayload">
                              <harp:PayloadType>Timestamp</harp:PayloadType>
                              <harp:IsArray>false</harp:IsArray>
                            </harp:Register>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="beh:GetDeviceMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>HarpCommands/Behavior</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>StepperDriverCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata>%YAML 1.1
---
# yaml-language-server: $schema=https://harp-tech.org/draft-02/schema/device.json
device: StepperDriver
whoAmI: 1130
firmwareVersion: "0.7"
hardwareTargets: "1.0"
registers:
  ##################################
  # Enable and disable
  ##################################
  EnableDriver:
    address: 32
    type: U8
    access: Write
    maskType: StepperMotors
    description: Enables the driver for a specific motor. If the driver is already enabled, the driver remains enabled.
  DisableDriver:
    address: 33
    type: U8
    access: Write
    maskType: StepperMotors
    description: Disables the driver for a specific stepper motor, which prevents current from being sent to the motor or load. If the driver is already disabled, the driver remains disabled.
  EnableEncoders:
    address: 34
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Specifies a set of port quadrature counters to enable in the device.
  DisableEncoders:
    address: 35
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Specifies a set of port quadrature counters to disable in the device.
  EnableDigitalInputs:
    address: 36
    type: U8
    access: Write
    maskType: DigitalInputs
    description: Specifies a set of digital inputs to enable in the device.
  DisableDigitalInputs:
    address: 37
    type: U8
    access: Write
    maskType: DigitalInputs
    description: Specifies a set of digital inputs to disable in the device.

  ##################################
  # Configuration
  ##################################
  Motor0OperationMode: &amp;opmode
    address: 38
    type: U8
    access: Write
    maskType: MotorOperationMode
    description: Configures the operation mode for motor 0.
  Motor1OperationMode:
    &lt;&lt;: *opmode
    address: 39
    description: Configures the operation mode for motor 1.
  Motor2OperationMode:
    &lt;&lt;: *opmode
    address: 40
    description: Configures the operation mode for motor 2.
  Motor3OperationMode:
    &lt;&lt;: *opmode
    address: 41
    description: Configures the operation mode for motor 3.
  Motor0MicrostepResolution: &amp;microstep_resolution
    address: 42
    type: U8
    access: Write
    maskType: MicrostepResolution
    description: Configures the microstep resolution for motor 0.
  Motor1MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 43
    description: Configures the microstep resolution for motor 1.
  Motor2MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 44
    description: Configures the microstep resolution for motor 2.
  Motor3MicrostepResolution:
    &lt;&lt;: *microstep_resolution
    address: 45
    description: Configures the microstep resolution for motor 3.

  Motor0MaximumRunCurrent: &amp;maxcurrent
    address: 46
    minValue: 0.139
    maxValue: 2.1
    defaultValue: 0.2
    type: Float
    access: Write
    description: Configures the maximum run RMS current per phase for motor 0.
  Motor1MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 47
    description: Configures the maximum run RMS current per phase for motor 1.
  Motor2MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 48
    description: Configures the maximum run RMS current per phase for motor 2.
  Motor3MaximumRunCurrent:
    &lt;&lt;: *maxcurrent
    address: 49
    description: Configures the maximum run RMS current per phase for motor 3.

  Motor0HoldCurrentReduction: &amp;currentreduction
    address: 50
    type: U8
    access: Write
    maskType: HoldCurrentReduction
    description: Configures the hold current reduction for motor 0.
  Motor1HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 51
    description: Configures the hold current reduction for motor 1.
  Motor2HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 52
    description: Configures the hold current reduction for motor 2.
  Motor3HoldCurrentReduction:
    &lt;&lt;: *currentreduction
    address: 53
    description: Configures the hold current reduction for motor 3.

  Motor0StepInterval: &amp;nominalinterval
    address: 54
    minValue: 100
    maxValue: 20000
    defaultValue: 250
    type: U16
    access: Write
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 0.
  Motor1StepInterval:
    &lt;&lt;: *nominalinterval
    address: 55
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 1.
  Motor2StepInterval:
    &lt;&lt;: *nominalinterval
    address: 56
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 2.
  Motor3StepInterval:
    &lt;&lt;: *nominalinterval
    address: 57
    description: Configures the time between step motor pulses (us) when running at nominal speed for motor 3.

  Motor0MaximumStepInterval: &amp;maxinterval
    address: 58
    minValue: 100
    maxValue: 20000
    defaultValue: 2000
    type: U16
    access: Write
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 0.
  Motor1MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 59
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 1.
  Motor2MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 60
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 2.
  Motor3MaximumStepInterval:
    &lt;&lt;: *maxinterval
    address: 61
    description: Configures the time between step motor pulses (us) used when starting or stopping a movement for motor 3.

  Motor0StepAccelerationInterval: &amp;accperiod
    address: 62
    minValue: 2
    maxValue: 2000
    defaultValue: 10
    type: U16
    access: Write
    description: Configures the acceleration for motor 0. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor1StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 63
    description: Configures the acceleration for motor 1. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor2StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 64
    description: Configures the acceleration for motor 2. The time between step pulses is decreased by this value when accelerating and increased when decelerating.
  Motor3StepAccelerationInterval:
    &lt;&lt;: *accperiod
    address: 65
    description: Configures the acceleration for motor 3. The time between step pulses is decreased by this value when accelerating and increased when decelerating.

  EncoderMode:
    address: 66
    type: U8
    access: Write
    maskType: EncoderModeConfig
    description: Configures the operation mode of the quadrature encoder.
  EncoderSamplingRate:
    address: 67
    type: U8
    access: Write
    maskType: EncoderSamplingRateConfig
    description: Configures the sampling rate of the quadrature encoder event.

  Input0OpMode: &amp;input_mode
    address: 68
    type: U8
    access: Write
    maskType: InputOpModeConfig
    description: Configures the operation mode for digital input 0.
  Input1OpMode:
    &lt;&lt;: *input_mode
    address: 69
    description: Configures the operation mode for digital input 1.
  Input2OpMode:
    &lt;&lt;: *input_mode
    address: 70
    description: Configures the operation mode for digital input 2.
  Input3OpMode:
    &lt;&lt;: *input_mode
    address: 71
    description: Configures the operation mode for digital input 3.

  InterlockEnabled:
    address: 72
    type: U8
    access: Write
    maskType: InterlockEnabledConfig
    description: Configures the external interlock connector state required for the device to be enabled.

  AccumulatedStepsSamplingRate:
    address: 73
    type: U8
    access: Write
    maskType: AccumulatedStepsSamplingRateConfig
    description: Configures the dispatch rate of the accumulated steps event.

  ##################################
  # Events
  ##################################
  MotorStopped:
    address: 74
    type: U8
    access: Event
    description: Emitted when any of the motors stops.
    payloadSpec:
      State:
        description: Specifies which motors are currently stopped.
        maskType: StepperMotors
        mask: 0x0F
      Changed:
        description: Specifies which motor just stopped.
        maskType: StepperMotors
        mask: 0xF0
  MotorOverVoltageDetection:
    address: 75
    type: U8
    access: Event
    maskType: StepperMotors
    description: Contains a bit mask specifying the motor where the over voltage detection and protection mechanism occurred, which can happen when the there's a quick deceleration from a high velocity or when the motor stalls (not implemented).
  MotorRaisedError:
    address: 76
    type: U8
    access: Event
    maskType: StepperMotors
    description: Contains a bit mask specifying the motor that triggered the error which can be happen in case of short-circuit or driver temperature above 165 degrees celsius.

  Encoders:
    address: 77
    type: S16
    length: 3
    access: [Event, Write]
    description: Contains the quadrature encoder readings.
    payloadSpec:
      Encoder0:
        offset: 0
        description: The quadrature counter on port ENC 0.
      Encoder1:
        offset: 1
        description: The quadrature counter on port ENC 1.
      Encoder2:
        offset: 2
        description: The quadrature counter on port ENC 2.

  DigitalInputState:
    address: 78
    access: Event
    type: U8
    maskType: DigitalInputStates
    description: Reflects the state of the digital input lines.

  DeviceState:
    address: 79
    type: U8
    access: Event
    maskType: DeviceStateMode
    description: Contains the state of the device.

  ##################################
  # Movement control
  ##################################

  MoveRelative:
    address: 80
    type: S32
    length: 4
    access: Write
    description: Moves all motors by the number of steps written in this array register and set the direction according to the value's signal. If a motor is disable, the user should set the value to 0.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the number of steps used to move motor 0.
      Motor1:
        offset: 1
        description: Contains the number of steps used to move motor 1.
      Motor2:
        offset: 2
        description: Contains the number of steps used to move motor 2.
      Motor3:
        offset: 3
        description: Contains the number of steps used to move motor 3.

  Motor0MoveRelative: &amp;motorsteps
    address: 81
    type: S32
    access: Write
    description: Moves motor 0 by the number of steps written in this register and set the direction according to the value's signal.
  Motor1MoveRelative:
    &lt;&lt;: *motorsteps
    address: 82
    description: Moves motor 1 by the number of steps written in this register and set the direction according to the value's signal.
  Motor2MoveRelative:
    &lt;&lt;: *motorsteps
    address: 83
    description: Moves motor 2 by the number of steps written in this register and set the direction according to the value's signal.
  Motor3MoveRelative:
    &lt;&lt;: *motorsteps
    address: 84
    description: Moves motor 3 by the number of steps written in this register and set the direction according to the value's signal.

  MoveAbsolute:
    address: 85
    type: S32
    length: 4
    access: Write
    description: Moves all motors to the absolute position written in this array register. If a motor is disable, the user should set the value to 0.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the absolute position to move motor 0.
      Motor1:
        offset: 1
        description: Contains the absolute position to move motor 1.
      Motor2:
        offset: 2
        description: Contains the absolute position to move motor 2.
      Motor3:
        offset: 3
        description: Contains the absolute position to move motor 3.

  Motor0MoveAbsolute: &amp;motorabsolutesteps
    address: 86
    type: S32
    access: Write
    description: Moves motor 0 to the absolute position written in this register.
  Motor1MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 87
    description: Moves motor 1 to the absolute position written in this register.
  Motor2MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 88
    description: Moves motor 2 to the absolute position written in this register.
  Motor3MoveAbsolute:
    &lt;&lt;: *motorabsolutesteps
    address: 89
    description: Moves motor 3 to the absolute position written in this register.

  AccumulatedSteps:
    address: 90
    type: S32
    length: 4
    access: [Event, Write]
    description: Contains the accumulated steps of all motors. Write a value to set the accumulated steps. An event will be emitted with a dispatch rate defined in AccumulatedStepsSamplingRate.
    payloadSpec:
      Motor0:
        offset: 0
        description: Contains the accumulated steps of motor 0.
      Motor1:
        offset: 1
        description: Contains the accumulated steps of motor 1.
      Motor2:
        offset: 2
        description: Contains the accumulated steps of motor 2.
      Motor3:
        offset: 3
        description: Contains the accumulated steps of motor 3.

  Mortor0AccumulatedSteps: &amp;motorsaccumulatedsteps
    address: 91
    type: S32
    access: Write
    description: Contains the accumulated number of steps of motor 0. Write a value to set the current number of accumulated steps.
  Mortor1AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 92
    description: Contains the accumulated number of steps of motor 1. Write a value to set the current number of accumulated steps.
  Mortor2AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 93
    description: Contains the accumulated number of steps of motor 2. Write a value to set the current number of accumulated steps.
  Mortor3AccumulatedSteps:
    &lt;&lt;: *motorsaccumulatedsteps
    address: 94
    description: Contains the accumulated number of steps of motor 3. Write a value to set the current number of accumulated steps.

  MaxPosition:
    address: 95
    type: S32
    length: 4
    access: Write
    description: Defines the limit of the accumulated steps for the positive movement of all motors. The device will not let the motors move further than this value. A value equal to 0 will disable the limits.
    payloadSpec:
      Motor0:
        offset: 0
        description: Defines the limit of the accumulated steps for the positive movement of motor 0. The device will not let the motor move further than this value.
      Motor1:
        offset: 1
        description: Defines the limit of the accumulated steps for the positive movement of motor 1. The device will not let the motor move further than this value.
      Motor2:
        offset: 2
        description: Defines the limit of the accumulated steps for the positive movement of motor 2. The device will not let the motor move further than this value.
      Motor3:
        offset: 3
        description: Defines the limit of the accumulated steps for the positive movement of motor 3. The device will not let the motor move further than this value.

  Motor0MaxPosition: &amp;motorsmaxsteps
    address: 96
    type: S32
    access: Write
    description: Specifies the limit of the accumulated steps for the positive movement of motor 0. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor1MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 97
    description: Specifies the limit of the accumulated steps for the positive movement of motor 1. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor2MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 98
    description: Specifies the limit of the accumulated steps for the positive movement of motor 2. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor3MaxPosition:
    &lt;&lt;: *motorsmaxsteps
    address: 99
    description: Specifies the limit of the accumulated steps for the positive movement of motor 3. The device will not let the motor move further than this value. A value equal to 0 disables the feature.

  MinPosition:
    address: 100
    type: S32
    length: 4
    access: Write
    description: Defines the limit of the accumulated steps for the negative movement of all motors. The device will not let the motors move further than this value. A value equal to 0 will disable the limits.
    payloadSpec:
      Motor0:
        offset: 0
        description: Defines the limit of the accumulated steps for the negative movement of motor 0. The device will not let the motor move further than this value.
      Motor1:
        offset: 1
        description: Defines the limit of the accumulated steps for the negative movement of motor 1. The device will not let the motor move further than this value.
      Motor2:
        offset: 2
        description: Defines the limit of the accumulated steps for the negative movement of motor 2. The device will not let the motor move further than this value.
      Motor3:
        offset: 3
        description: Defines the limit of the accumulated steps for the negative movement of motor 3. The device will not let the motor move further than this value.

  Motor0MinPosition: &amp;motorsminsteps
    address: 101
    type: S32
    access: Write
    description: Specifies the limit of the accumulated steps for the negative movement of motor 0. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor1MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 102
    description: Specifies the limit of the accumulated steps for the negative movement of motor 1. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor2MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 103
    description: Specifies the limit of the accumulated steps for the negative movement of motor 2. The device will not let the motor move further than this value. A value equal to 0 disables the feature.
  Motor3MinPosition:
    &lt;&lt;: *motorsminsteps
    address: 104
    description: Specifies the limit of the accumulated steps for the negative movement of motor 3. The device will not let the motor move further than this value. A value equal to 0 disables the feature.

  StepRelative:
    address: 105
    type: S32
    length: 4
    access: Write
    description: Starts the movement of all motors with the step interval defined by this array. The value's signal defines the direction.
    payloadSpec:
      Motor0:
        offset: 0
        description: Starts the movement of motor 0 with the step interval defined by this register. The value's signal defines the direction.
      Motor1:
        offset: 1
        description: Starts the movement of motor 1 with the step interval defined by this register. The value's signal defines the direction.
      Motor2:
        offset: 2
        description: Starts the movement of motor 2 with the step interval defined by this register. The value's signal defines the direction.
      Motor3:
        offset: 3
        description: Starts the movement of motor 3 with the step interval defined by this register. The value's signal defines the direction.

  Motor0StepRelative: &amp;immediatesteps
    address: 106
    type: S32
    access: Write
    description: Starts the movement of motor 0 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor1StepRelative:
    &lt;&lt;: *immediatesteps
    address: 107
    description: Starts the movement of motor 1 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor2StepRelative:
    &lt;&lt;: *immediatesteps
    address: 108
    description: Starts the movement of motor 2 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.
  Motor3StepRelative:
    &lt;&lt;: *immediatesteps
    address: 109
    description: Starts the movement of motor 3 with the step interval defined by this register, disregarding the acceleration protocol. The sign of the value specifies the direction.

  ##################################
  # Actions
  ##################################
  StopMotors:
    address: 110
    type: U8
    access: Write
    maskType: StepperMotors
    description: Stops the motors selected in the bit-mask immediately.
  ResetMotors:
    address: 111
    type: U8
    access: Write
    visibility: private
    maskType: StepperMotors
    description: Resets the internal motor driver which also clears any eventual error (not implemented).
  ResetEncoders:
    address: 112
    type: U8
    access: Write
    maskType: QuadratureEncoders
    description: Resets the encoder.

  ##################################
  # Reserved
  ##################################
  Reserved0: &amp;reserved
    address: 113
    type: U8
    access: Write
    visibility: private
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 0.
  Reserved1:
    &lt;&lt;: *reserved
    address: 114
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 1.
  Reserved2:
    &lt;&lt;: *reserved
    address: 115
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 2.
  Reserved3:
    &lt;&lt;: *reserved
    address: 116
    description: Contains the CFG configuration pins of the TMC2210 driver that controls motor 3.
  Reserved4:
    &lt;&lt;: *reserved
    address: 117
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 0.
  Reserved5:
    &lt;&lt;: *reserved
    address: 118
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 1.
  Reserved6:
    &lt;&lt;: *reserved
    address: 119
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 2.
  Reserved7:
    &lt;&lt;: *reserved
    address: 120
    visibility: private
    description: Contains the raw data of the digital potentiometer that controls current limit of motor 3.

  ##################################
  # Reserved block
  ##################################
  Reserved8: &amp;reserved_unused
    address: 121
    visibility: private
    type: U8
    access: Read
    description: Reserved register.
  Reserved9:
    &lt;&lt;: *reserved_unused
    address: 122
  Reserved10:
    &lt;&lt;: *reserved_unused
    address: 123
  Reserved11:
    &lt;&lt;: *reserved_unused
    address: 124
  Reserved12:
    &lt;&lt;: *reserved_unused
    address: 125
  Reserved13:
    &lt;&lt;: *reserved_unused
    address: 126
  Reserved14:
    &lt;&lt;: *reserved_unused
    address: 127
  Reserved15:
    &lt;&lt;: *reserved_unused
    address: 128
  Reserved16:
    &lt;&lt;: *reserved_unused
    address: 129

  ##################################
  # Quick movement
  ##################################
  TriggerQuickMovement:
    address: 130
    type: U8
    access: Write
    maskType: StepperMotors
    description: Triggers the quick movement in the correspondent motor with the currently configured settings.
  Motor1QuickMovementPulseDistance: &amp;quickmovement_pulsedistance
    address: 131
    type: Float
    access: Write
    description: Sets the single pulse distance for a quick movement, in millimeters, for the Motor 1.
  Motor2QuickMovementPulseDistance:
    &lt;&lt;: *quickmovement_pulsedistance
    address: 132
    description: Sets the single pulse distance for a quick movement, in millimeters, for the Motor 2.
  Motor1QuickMovementNominalSpeed: &amp;quickmovement_nominalspeed
    address: 133
    type: Float
    access: Write
    description: Sets the target speed for a quick movement, in millimeters per second, for the Motor 1.
  Motor2QuickMovementNominalSpeed:
    &lt;&lt;: *quickmovement_nominalspeed
    address: 134
    description: Sets the target speed for a quick movement, in millimeters per second, for the Motor 2.
  Motor1QuickMovementInitialSpeed: &amp;quickmovement_initialspeed
    address: 135
    type: Float
    access: Write
    description: Sets the initial speed for a quick movement, in millimeters per second, for the Motor 1.
  Motor2QuickMovementInitialSpeed:
    &lt;&lt;: *quickmovement_initialspeed
    address: 136
    description: Sets the initial speed for a quick movement, in millimeters per second, for the Motor 2.
  Motor1QuickMovementAcceleration: &amp;quickmovement_acceleration
    address: 137
    type: Float
    access: Write
    description: Sets the acceleration for a quick movement, in millimeters per second^2, for the Motor 1.
  Motor2QuickMovementAcceleration:
    &lt;&lt;: *quickmovement_acceleration
    address: 138
    description: Sets the acceleration for a quick movement, in millimeters per second^2, for the Motor 2.
  Motor1QuickMovementDistance: &amp;quickmovement_distance
    address: 139
    type: Float
    access: Write
    description: Sets the travel distance of a quick movement, in millimeters, for the Motor 1.
  Motor2QuickMovementDistance:
    &lt;&lt;: *quickmovement_distance
    address: 140
    description: Sets the travel distance of a quick movement, in millimeters, for the Motor 1.

##################################
# Bit masks
##################################
bitMasks:
  StepperMotors:
    description: Specifies the index of each motor.
    bits:
      Motor0: 0x01
      Motor1: 0x02
      Motor2: 0x04
      Motor3: 0x08
  QuadratureEncoders:
    description: Specifies the index of each motor.
    bits:
      Encoder0: 0x01
      Encoder1: 0x02
      Encoder2: 0x04
  DigitalInputs:
    description: Specifies the available digital input lines.
    bits:
      Input0: 0x1
      Input1: 0x2
      Input2: 0x4
      Input3: 0x8
  DigitalInputStates:
    description: Specifies the state of the port and digital input line that changed.
    bits:
      Input0: 0x1
      Input1: 0x2
      Input2: 0x4
      Input3: 0x8
      Input0Changed: 0x10
      Input1Changed: 0x20
      Input2Changed: 0x40
      Input3Changed: 0x80
##################################
# Group masks
##################################
groupMasks:
  EncoderModeConfig:
    description: Specifies the type of reading made from the quadrature QuadratureEncoders.
    values:
      Position: 0
      Displacement: 1
  EncoderSamplingRateConfig:
    description: Specifies the rate of the events from the quadrature QuadratureEncoders.
    values:
      Rate100Hz: 0
      Rate200Hz: 1
      Rate250Hz: 2
      Rate500Hz: 3
  MotorOperationMode:
    description: Specifies the motor operation mode.
    values:
      QuietMode: 0
      DynamicMovements: 1
  MicrostepResolution:
    description: Specifies the microstep resolution for each step pulse.
    values:
      Microstep8: 0
      Microstep16: 1
      Microstep32: 2
      Microstep64: 3
  HoldCurrentReduction:
    description: Specifies the hold current reduction.
    values:
      ReductionTo50Percent: 0
      ReductionTo25Percent: 1
      ReductionTo12Percent: 2
      NoReduction: 3
  InputOpModeConfig:
    description: Specifies the inputs operation mode.
    values:
      EventOnly: 0x0
      StopMotor0OnRising: 0x10
      StopMotor1OnRising: 0x11
      StopMotor2OnRising: 0x12
      StopMotor3OnRising: 0x13
      StopMotor0OnFalling: 0x20
      StopMotor1OnFalling: 0x21
      StopMotor2OnFalling: 0x22
      StopMotor3OnFalling: 0x23
  TriggerConfig:
    description: Specifies the input trigger configuration.
    values:
      FallingEdge: 0
      RisingEdge: 1
  InterlockEnabledConfig:
    description: Specifies the external connector state that enables the device.
    values:
      Closed: 0
      Open: 1
  AccumulatedStepsSamplingRateConfig:
    description: Specifies the rate of the accumulated steps events.
    values:
      Disabled: 0
      Rate10Hz: 1
      Rate50Hz: 2
      Rate100Hz: 3
  DeviceStateMode:
    description: Specifies the current state of the device.
    values:
      Disabled: 0
      Enabled: 1</DeviceMetadata>
                          <Modality>Behavior</Modality>
                          <DeviceName>HarpCommands/StepperDriver</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpLoadCellsCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p13:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>HarpCommands/LoadCells</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpLickometerCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p12:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>HarpCommands/Lickometer</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpWhiteRabbitCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p4:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName>HarpCommands/ClockGenerator</DeviceName>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpEnvironmentSensorCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpSeconds</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p16:ModifyMessage">
                            <p16:Address xsi:nil="true" />
                            <p16:MessageTypeModified xsi:nil="true" />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p15:GetMetadata" />
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceMetadata" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.HarpUtils:LogHarpDeviceWithMetadata.bonsai">
                          <DeviceMetadata />
                          <Modality>Behavior</Modality>
                          <DeviceName xsi:nil="true" />
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="5" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="11" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="11" Label="Source2" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source3" />
                        <Edge From="12" To="14" Label="Source1" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="18" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source2" />
                        <Edge From="19" To="21" Label="Source1" />
                        <Edge From="20" To="21" Label="Source2" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="27" Label="Source1" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="24" To="27" Label="Source2" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source3" />
                        <Edge From="28" To="30" Label="Source1" />
                        <Edge From="29" To="30" Label="Source2" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="36" Label="Source1" />
                        <Edge From="32" To="33" Label="Source1" />
                        <Edge From="33" To="36" Label="Source2" />
                        <Edge From="34" To="35" Label="Source1" />
                        <Edge From="35" To="36" Label="Source3" />
                        <Edge From="37" To="39" Label="Source1" />
                        <Edge From="38" To="39" Label="Source2" />
                        <Edge From="39" To="40" Label="Source1" />
                        <Edge From="40" To="45" Label="Source1" />
                        <Edge From="41" To="42" Label="Source1" />
                        <Edge From="42" To="45" Label="Source2" />
                        <Edge From="43" To="44" Label="Source1" />
                        <Edge From="44" To="45" Label="Source3" />
                        <Edge From="46" To="48" Label="Source1" />
                        <Edge From="47" To="48" Label="Source2" />
                        <Edge From="48" To="49" Label="Source1" />
                        <Edge From="49" To="54" Label="Source1" />
                        <Edge From="50" To="51" Label="Source1" />
                        <Edge From="51" To="54" Label="Source2" />
                        <Edge From="52" To="53" Label="Source1" />
                        <Edge From="53" To="54" Label="Source3" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>SoftwareEvents</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SoftwareEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p7:TimestampSoftwareEvent" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                          <LoggerName>SoftwareEvents</LoggerName>
                          <SubjectName>LoggingRootPath</SubjectName>
                          <Modality xsi:nil="true" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>UpdaterEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p7:TimestampSoftwareEvent" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                          <LoggerName>UpdaterEvents</LoggerName>
                          <SubjectName>LoggingRootPath</SubjectName>
                          <Modality xsi:nil="true" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Annotations</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p7:CreateSoftwareEvent">
                            <p7:EventName>Annotations</p7:EventName>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:ObserveOn">
                            <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p7:TimestampSoftwareEvent" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                          <LoggerName>Annotations</LoggerName>
                          <SubjectName>LoggingRootPath</SubjectName>
                          <Modality xsi:nil="true" />
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>Metadata</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Repository</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p9:IsRepositoryClean">
                                  <p9:IgnoreUntracked>false</p9:IgnoreUntracked>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:CreateSoftwareEvent">
                                  <p7:EventName>RepositoryStatus</p7:EventName>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="MulticastSubject">
                                <Name>SoftwareEvents</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RngSeedValue</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:CreateSoftwareEvent">
                                  <p7:EventName>RngSeed</p7:EventName>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="MulticastSubject">
                                <Name>SoftwareEvents</Name>
                              </Expression>
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="2" To="3" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="4" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="14" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="19" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source2" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="25" Label="Source1" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="24" To="25" Label="Source2" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="30" Label="Source1" />
                        <Edge From="28" To="29" Label="Source1" />
                        <Edge From="29" To="30" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:Defer">
                    <Name>OperationControl</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>OperationControl</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>deviceName</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CurrentForce</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>Rename</scr:Name>
                          <scr:Expression>new(
Seconds as Seconds,
new(
Value.Left as Left,
Value.Right as Right,
Value.Push as Push,
Value.Pull as Pull
) as Force)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>deviceName</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DeviceName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Modality</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Modality" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogCsv.bonsai">
                          <SubjectName>LoggingRootPath</SubjectName>
                          <Modality>Behavior</Modality>
                          <LogName>CurrentForce</LogName>
                          <DeviceName />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LoadCellsCalibration</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p7:CreateSoftwareEvent">
                            <p7:EventName>LoadCellsCalibration</p7:EventName>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>SoftwareEvents</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="9" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source2" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source3" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:Defer">
                    <Name>Logs</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>Logs</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>DeviceName</Name>
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>ConfigSchemaLogging</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>SubjectSchema</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p1:SerializeToJson" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName />
                                <LogName>session_output</LogName>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>TaskLogicSchema</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p3:SerializeToJson" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName>Config</DeviceName>
                                <LogName>tasklogic_output</LogName>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RigSchema</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p2:SerializeToJson" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName>Config</DeviceName>
                                <LogName>rig_output</LogName>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RawRigSchema</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName>Config</DeviceName>
                                <LogName>rig_input</LogName>
                                <Extension>json</Extension>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RawSessionSchema</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName>Config</DeviceName>
                                <LogName>session_input</LogName>
                                <Extension>json</Extension>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RawTaskLogicSchema</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName>Config</DeviceName>
                                <LogName>tasklogic_input</LogName>
                                <Extension>json</Extension>
                              </Expression>
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="6" Label="Source1" />
                              <Edge From="2" To="3" Label="Source1" />
                              <Edge From="3" To="6" Label="Source2" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source3" />
                              <Edge From="7" To="8" Label="Source1" />
                              <Edge From="8" To="13" Label="Source1" />
                              <Edge From="9" To="10" Label="Source1" />
                              <Edge From="10" To="13" Label="Source2" />
                              <Edge From="11" To="12" Label="Source1" />
                              <Edge From="12" To="13" Label="Source3" />
                              <Edge From="14" To="15" Label="Source1" />
                              <Edge From="15" To="20" Label="Source1" />
                              <Edge From="16" To="17" Label="Source1" />
                              <Edge From="17" To="20" Label="Source2" />
                              <Edge From="18" To="19" Label="Source1" />
                              <Edge From="19" To="20" Label="Source3" />
                              <Edge From="21" To="26" Label="Source1" />
                              <Edge From="22" To="23" Label="Source1" />
                              <Edge From="23" To="26" Label="Source2" />
                              <Edge From="24" To="25" Label="Source1" />
                              <Edge From="25" To="26" Label="Source3" />
                              <Edge From="27" To="32" Label="Source1" />
                              <Edge From="28" To="29" Label="Source1" />
                              <Edge From="29" To="32" Label="Source2" />
                              <Edge From="30" To="31" Label="Source1" />
                              <Edge From="31" To="32" Label="Source3" />
                              <Edge From="33" To="38" Label="Source1" />
                              <Edge From="34" To="35" Label="Source1" />
                              <Edge From="35" To="38" Label="Source2" />
                              <Edge From="36" To="37" Label="Source1" />
                              <Edge From="37" To="38" Label="Source3" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>Logs</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>EndExperiment</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="StringProperty">
                                  <Value>ExperimentCompleted</Value>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:CreateSoftwareEvent">
                                  <p7:EventName>SoftwareEvent</p7:EventName>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>HarpTimestampSource</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="harp:CreateTimestamped" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:TimestampSoftwareEvent" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p11:SerializeToJson" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="DeviceName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                                <DeviceName />
                                <LogName>endsession</LogName>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RuntimeLogging</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:ObserveOn">
                                  <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>HarpTimestampSource</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:ObserveOn">
                                  <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="harp:CreateTimestamped" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="p7:TimestampSoftwareEvent" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Modality</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="Modality" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>DeviceName</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="StringProperty">
                                  <Value>RuntimeLogging</Value>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Take">
                                  <rx:Count>1</rx:Count>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="Format">
                                <Format>{0}/{1}</Format>
                                <Selector>Item1,Item2</Selector>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="LoggerName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                                <LoggerName>RuntimeLogging</LoggerName>
                                <SubjectName>LoggingRootPath</SubjectName>
                                <Modality xsi:nil="true" />
                              </Expression>
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="2" To="4" Label="Source1" />
                              <Edge From="3" To="4" Label="Source2" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                              <Edge From="6" To="7" Label="Source1" />
                              <Edge From="7" To="12" Label="Source1" />
                              <Edge From="8" To="9" Label="Source1" />
                              <Edge From="9" To="12" Label="Source2" />
                              <Edge From="10" To="11" Label="Source1" />
                              <Edge From="11" To="12" Label="Source3" />
                              <Edge From="13" To="14" Label="Source1" />
                              <Edge From="14" To="17" Label="Source1" />
                              <Edge From="15" To="16" Label="Source1" />
                              <Edge From="16" To="17" Label="Source2" />
                              <Edge From="17" To="18" Label="Source1" />
                              <Edge From="18" To="19" Label="Source1" />
                              <Edge From="19" To="28" Label="Source1" />
                              <Edge From="20" To="21" Label="Source1" />
                              <Edge From="21" To="28" Label="Source2" />
                              <Edge From="22" To="25" Label="Source1" />
                              <Edge From="23" To="24" Label="Source1" />
                              <Edge From="24" To="25" Label="Source2" />
                              <Edge From="25" To="26" Label="Source1" />
                              <Edge From="26" To="27" Label="Source1" />
                              <Edge From="27" To="28" Label="Source3" />
                            </Edges>
                          </Workflow>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:Defer">
              <Name>BehaviorVideos</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Modality" />
                  </Expression>
                  <Expression xsi:type="PropertySource" TypeArguments="p7:AppendModalitySuffix,sys:Nullable(p7:Modality)">
                    <MemberName>Modality</MemberName>
                    <Value>BehaviorVideos</Value>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>Modality</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\TriggeredCameras.bonsai" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT1S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartLogging</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>ControlUserInterface</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="EnableExperimentUI" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>EnableExperimentUI</Name>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.AindManipulator:AindManipulatorGui.bonsai" />
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\LauncherControl.bonsai" />
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="Extensions\ValveGui.bonsai">
              <Interval>PT0.5S</Interval>
              <OpeningTimeMs>100</OpeningTimeMs>
              <Repeats>200</Repeats>
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>HwShortcuts</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="gui:ButtonBuilder">
                    <gui:Name>ForceReward</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:Text>ForceReward</gui:Text>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>ForceReward</Name>
                  </Expression>
                  <Expression xsi:type="VisualizerMapping">
                    <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:ButtonVisualizer" />
                  </Expression>
                  <Expression xsi:type="gui:TableLayoutPanelBuilder">
                    <gui:Name>HwShortcuts</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:Font>Microsoft Sans Serif, 20pt</gui:Font>
                    <gui:ColumnCount>3</gui:ColumnCount>
                    <gui:RowCount>3</gui:RowCount>
                    <gui:ColumnStyles />
                    <gui:RowStyles />
                    <gui:CellSpans />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>ForceReward</Name>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>DefaultRewardAmount</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>3</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="5" To="9" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source2" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Visualizer">
              <Name>LoadCellControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>EnableExperimentUI</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Enabled" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CalibratingLoadCells</Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Prompt</scr:Name>
                    <scr:Expression>it ? "Calibrating..." : "Calibrate Load Cells"</scr:Expression>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Text" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="gui:ButtonBuilder">
                    <gui:Name>TriggerLoadCellCalibration</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:Text>TriggerLoadCellCalibration</gui:Text>
                  </Expression>
                  <Expression xsi:type="rx:Sink">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Unit" />
                        <Expression xsi:type="MulticastSubject">
                          <Name>CalibrateLoadCells</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="VisualizerMapping">
                    <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:ButtonVisualizer" />
                  </Expression>
                  <Expression xsi:type="gui:TableLayoutPanelBuilder">
                    <gui:Name>LoadCellCalibration</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:ColumnCount>1</gui:ColumnCount>
                    <gui:RowCount>1</gui:RowCount>
                    <gui:ColumnStyles />
                    <gui:RowStyles />
                    <gui:CellSpans />
                  </Expression>
                  <Expression xsi:type="VisualizerMapping" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLoadCellsEvents</Name>
                  </Expression>
                  <Expression xsi:type="p13:Parse">
                    <harp:Register xsi:type="p13:TimestampedLoadCellData" />
                  </Expression>
                  <Expression xsi:type="zg:RollingGraphBuilder">
                    <zg:IndexSelector>Seconds</zg:IndexSelector>
                    <zg:ValueSelector>Value.Channel0,Value.Channel1,Value.Channel2,Value.Channel3,Value.Channel4,Value.Channel5,Value.Channel6,Value.Channel7</zg:ValueSelector>
                    <zg:SymbolType>None</zg:SymbolType>
                    <zg:LineWidth>1</zg:LineWidth>
                    <zg:CurveSettings />
                    <zg:Capacity>5000</zg:Capacity>
                    <zg:Min xsi:nil="true" />
                    <zg:Max xsi:nil="true" />
                  </Expression>
                  <Expression xsi:type="VisualizerMapping" />
                  <Expression xsi:type="gui:TableLayoutPanelBuilder">
                    <gui:Name>Calibration</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:ColumnCount>2</gui:ColumnCount>
                    <gui:RowCount>1</gui:RowCount>
                    <gui:ColumnStyles>
                      <gui:ColumnStyle>
                        <gui:SizeType>Percent</gui:SizeType>
                        <gui:Width>0.1</gui:Width>
                      </gui:ColumnStyle>
                      <gui:ColumnStyle>
                        <gui:SizeType>Percent</gui:SizeType>
                        <gui:Width>0.9</gui:Width>
                      </gui:ColumnStyle>
                    </gui:ColumnStyles>
                    <gui:RowStyles />
                    <gui:CellSpans />
                  </Expression>
                  <Expression xsi:type="VisualizerMapping" />
                  <Expression xsi:type="gui:TableLayoutPanelBuilder">
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:ColumnCount>1</gui:ColumnCount>
                    <gui:RowCount>2</gui:RowCount>
                    <gui:ColumnStyles />
                    <gui:RowStyles />
                    <gui:CellSpans />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="5" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="14" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source2" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="gui:TabControlBuilder">
              <gui:Name>ControlUserInterface</gui:Name>
              <gui:Enabled>true</gui:Enabled>
              <gui:Visible>true</gui:Visible>
              <gui:Font>Microsoft Sans Serif, 10pt</gui:Font>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>EnableExperimentUI</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="15" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="15" Label="Source2" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="15" Label="Source3" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="15" Label="Source4" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source5" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Visualizers</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Visualizer">
              <Name>VideoControllerVisualization</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>TriggeredCameraController</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>it != null ? (it.Cameras.Count &gt; 0) : false</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>TriggeredCamerasControllerExists</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TriggeredCamerasControllerExists</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>TriggeredCameraController.Cameras.Keys</Selector>
                  </Expression>
                  <Expression xsi:type="dsp:ConvertToArray">
                    <dsp:Depth xsi:nil="true" />
                  </Expression>
                  <Expression xsi:type="gui:ListBoxDataSourceBuilder">
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:DisplayMember />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>SelectedControllerCamera</Name>
                  </Expression>
                  <Expression xsi:type="VisualizerMapping">
                    <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:ListBoxDataSourceVisualizer" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SelectedControllerCamera</Name>
                  </Expression>
                  <Expression xsi:type="rx:CreateObservable">
                    <Name>GetStream</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Camera</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TriggeredCamerasStream</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Camera</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Key</Selector>
                              </Expression>
                              <Expression xsi:type="ExternalizedMapping">
                                <Property Name="Value" />
                              </Expression>
                              <Expression xsi:type="Equal">
                                <Operand xsi:type="StringProperty" />
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="3" Label="Source1" />
                              <Edge From="2" To="3" Label="Source2" />
                              <Edge From="3" To="4" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="6" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Switch" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value.Image</Selector>
                  </Expression>
                  <Expression xsi:type="VisualizerMapping">
                    <VisualizerType xsi:type="TypeMapping" TypeArguments="p17:IplImageVisualizer" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TriggeredCamerasControllerExists</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Enabled" />
                      <Property Name="Visible" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="gui:TableLayoutPanelBuilder">
                    <gui:Name>VideoVisualizer</gui:Name>
                    <gui:Enabled>true</gui:Enabled>
                    <gui:Visible>true</gui:Visible>
                    <gui:ColumnCount>1</gui:ColumnCount>
                    <gui:RowCount>2</gui:RowCount>
                    <gui:ColumnStyles />
                    <gui:RowStyles>
                      <gui:RowStyle>
                        <gui:SizeType>Percent</gui:SizeType>
                        <gui:Height>0.1</gui:Height>
                      </gui:RowStyle>
                      <gui:RowStyle>
                        <gui:SizeType>Percent</gui:SizeType>
                        <gui:Height>0.6</gui:Height>
                      </gui:RowStyle>
                      <gui:RowStyle>
                        <gui:SizeType>Percent</gui:SizeType>
                        <gui:Height>0.3</gui:Height>
                      </gui:RowStyle>
                    </gui:RowStyles>
                    <gui:CellSpans />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="7" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source2" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="20" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="20" Label="Source2" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source3" />
                  <Edge From="20" To="21" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>LickEvent</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="zg:RollingGraphBuilder">
              <zg:IndexSelector>Item2</zg:IndexSelector>
              <zg:ValueSelector>Item1</zg:ValueSelector>
              <zg:SymbolType>Circle</zg:SymbolType>
              <zg:LineWidth>0</zg:LineWidth>
              <zg:CurveSettings>
                <zg:CurveConfiguration>
                  <zg:Label>Licks</zg:Label>
                  <zg:Color>Blue</zg:Color>
                </zg:CurveConfiguration>
              </zg:CurveSettings>
              <zg:Capacity xsi:nil="true" />
              <zg:Min xsi:nil="true" />
              <zg:Max xsi:nil="true" />
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="zg:RollingGraphVisualizer" />
            </Expression>
            <Expression xsi:type="zg:RollingGraphPanelBuilder">
              <zg:Name>Lickometer</zg:Name>
              <zg:ReverseX>false</zg:ReverseX>
              <zg:ReverseY>false</zg:ReverseY>
              <zg:Span>20</zg:Span>
              <zg:Capacity xsi:nil="true" />
              <zg:BaseAxis>X</zg:BaseAxis>
              <zg:BarType>Cluster</zg:BarType>
              <zg:Min>0</zg:Min>
              <zg:Max>2</zg:Max>
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="zg:RollingGraphPanelVisualizer" />
            </Expression>
            <Expression xsi:type="gui:TableLayoutPanelBuilder">
              <gui:Name>Monitoring</gui:Name>
              <gui:Enabled>true</gui:Enabled>
              <gui:Visible>true</gui:Visible>
              <gui:ColumnCount>1</gui:ColumnCount>
              <gui:RowCount>3</gui:RowCount>
              <gui:ColumnStyles />
              <gui:RowStyles>
                <gui:RowStyle>
                  <gui:SizeType>Percent</gui:SizeType>
                  <gui:Height>0.4</gui:Height>
                </gui:RowStyle>
                <gui:RowStyle>
                  <gui:SizeType>Percent</gui:SizeType>
                  <gui:Height>0.4</gui:Height>
                </gui:RowStyle>
                <gui:RowStyle>
                  <gui:SizeType>Percent</gui:SizeType>
                  <gui:Height>0.2</gui:Height>
                </gui:RowStyle>
              </gui:RowStyles>
              <gui:CellSpans />
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SoftwareEvents</Name>
            </Expression>
            <Expression xsi:type="VisualizerMapping" />
            <Expression xsi:type="gui:TableLayoutPanelBuilder">
              <gui:Name>SoftwareEvents</gui:Name>
              <gui:Enabled>true</gui:Enabled>
              <gui:Visible>true</gui:Visible>
              <gui:ColumnCount>1</gui:ColumnCount>
              <gui:RowCount>1</gui:RowCount>
              <gui:ColumnStyles />
              <gui:RowStyles />
              <gui:CellSpans />
            </Expression>
            <Expression xsi:type="VisualizerMapping">
              <VisualizerType xsi:type="TypeMapping" TypeArguments="gui:TableLayoutPanelVisualizer" />
            </Expression>
            <Expression xsi:type="gui:TabControlBuilder">
              <gui:Enabled>true</gui:Enabled>
              <gui:Visible>true</gui:Visible>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="10" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="3" To="5" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source2" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="16" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source2" />
            <Edge From="16" To="17" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>StartCondition</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p10:Unit">
              <rx:Name>StartExperimentShortcut</rx:Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>TriggeredCamerasReady</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>StartLogging</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" DisplayName="LogDelay" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT3S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="7" Label="Source1" />
            <Edge From="6" To="7" Label="Source2" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT1S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>EndRoutine</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT2S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="9" To="11" Label="Source1" />
      <Edge From="10" To="11" Label="Source2" />
      <Edge From="11" To="13" Label="Source1" />
      <Edge From="12" To="13" Label="Source2" />
      <Edge From="14" To="17" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source2" />
      <Edge From="17" To="19" Label="Source1" />
      <Edge From="18" To="19" Label="Source2" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>